services:
  postgres:
    image: postgres:15
    container_name: pg-container
    environment:
      POSTGRES_DB: anonymization_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data 
      - ./DataAnonymization/schema-postgresql.sql:/docker-entrypoint-initdb.d/schema-postgresql.sql
    networks:
      - app-network   # ðŸ‘ˆ added

  spring-batch-app:
    build:
      context: ./DataAnonymization
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://pg-container:5432/anonymization_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    command: ["java", "-jar", "batch-app.jar"]
    networks:
      - app-network   # ðŸ‘ˆ same network

  data-generator:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: anonymization_db
      DB_USER: postgres
      DB_PASSWORD: password
    networks:
      - app-network   # ðŸ‘ˆ same network
    restart: "no"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
